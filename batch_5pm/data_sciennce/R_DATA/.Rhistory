sort(d,decreasing = TRUE)
d[order(-d)]
data
sort(data)
sort(data$english)
data
data[,67]
data[67,]
data[6,]
dat
data
data[6,3,5,8,]
data[c(6,3,5,8),]
data[order(data$math),]
data[order(data$per),]
data[order(-data$per),]
data[order(-data$math,-data$english),]
getcwd()
getwd()
new_data = read.csv('data/dataMelt.csv')
new_data
baseball = read.csv('baseball.csv')
baseball
fifa = read.csv('fifa.csv')
length(fifa)
fifa
dim(fifa)
columns(fifa)
colnames(fifa)
fifa$name
colnames(fifa)
sum(fifa$height)
sum(fifa$height)/dim(fifa)[1]
head(fifa$height)
plot(fifa$height)
boxplot(fifa$height)
head(fifa$shooting)
length(fifa$height)
length(fifa$speed)
plot(fifa$speed,fifa$height)
colnames(fifa)
head(fifa$reflexes)
head(fifa$speed)
head(fifa$shooting)
data
t(data)
airquality
t(airquality)
t = t(airquality)
head(t)
head(t,3)
t[1:5,1:5]
install.packages('tidr')
install.packages('tidyr')
install.packages('sqldf')
install.packages('plyr')
install.packages('dplyr')
install.packages('Data.table')
install.packages('data.table')
install.packages('stringer')
install.packages('stringr')
library(reshape2)
melt()
dcast()
data
melt(data)
melt(data,id.vars = 'per')
melt(data,id.vars = c('name','per')
)
melt(data,id.vars = c('id','name','per',variable.name='subjects',value.name='marks')
)
melt(data,id.vars = c('id','name','per',variable.name='subjects',value.name='marks'))
melt(data,id.vars = c('id','name','per'))
melt(data,id.vars = c('id','name','per'),variable.name = 'subjects',value.name = 'marks')
new = melt(data,id.vars = c('id','name','per'),variable.name = 'subjects',value.name = 'marks')
dcast(new)
dcast(new,id.vars=c('id','name','per'))
dcast(new,id.vars=c('id','name','per'),value.var = 'marks')
dcast(new,value.var = 'marks')
dcast(new,name+id+per~subject)
dcast(new,name+id+per~subject)
new
dcast(new,name+id+per~subjects)
student = data.frame(name=c('nilofer','ajay','vipual','bharat','gravit','abhisaar'),math=c(67,89,78,65,78,54),english=c(89,67,45,67,45,67),hindi=c(67,78,78,66,78,87))
student
library('reshape2')
student
demo1 = melt(student)
demo1
student
per = c(78,65,78,56,78,56)
student <- cbind(student,per)
student
demo = melt(student,id.vars = c('name','per'),variable.name = 'subjects',value.name = 'marks')
demo
demo1 = dcast(demo,name+per~subjects)
demo1 = dcast(demo,name+per~subjects,value.var = marks)
demo1 = dcast(demo,name+per~subjects,value.var = 'marks')
demo1
student
airquality
colnames(airquality)
dataset = melt(airquality,id.vars=c('Ozone','Temp'),variable.name = 'Measure_variables',value.name = 'values')
dataset
dataset
head(dataset)
plot(dataset$Ozone,dataset$Temp)
plot(dataset$Temp,dataset$Ozone)
plot(dataset$Temp,dataset$Ozone,type = 'bar')
plot(dataset$Temp,dataset$Ozone,type = 'b')
plot(dataset$Temp,dataset$Ozone,type = 'o',col='b')
plot(dataset$Temp,dataset$Ozone,type = 'o',col='3')
plot(dataset$Temp,dataset$Ozone,type = 'h',col='3')
library('tidyr')
data = data.frame(Country=c('FR','DE','US'),2011=c(7000,5800,15000),2012=c(6900,6000,14000),2013=c(7000,6200,13000))
data = data.frame(Country=c('FR','DE','US'),'2011'=c(7000,5800,15000),'2012'=c(6900,6000,14000),'2013'=c(7000,6200,13000))
data
data1 = data.frame(city=c('New York','New York','London','London','Beijing','Beijing'),size=c('large','small','large','small','large','small'),amount=c(23,14,22,16,121,56))
data1
colnames(data) <- c(country,2011,2012,2013)
colnames(data) <- c('country',2011,2012,2013)
data
data1
d = gather(data1,key='year',value=data1[2:])
d = gather(data1,key='year',value=data[2:])
d = gather(data,key='year',value=data[2:])
d = gather(data,key='year',value='pollution',2:4)
data
d = gather(data,key='year',value='pollution',2:4)
d
data1
d1 = spread(data1,key=size,value=amount)
d1
d2 = spread(data1,key=city,value=amount)
d2
dcast(data1,city~size,value.var = amount)
dcast(data1,city~size,value.var = 'amount')
data1
dcast(data1,size~city,value.var = 'amount')
d = dcast(data1,size~city,value.var = 'amount')
plot(d$London,d$Beijing)
plot(d$London,d$Beijing,'b')
plot(d$London,d$Beijing,'o')
getwd()
data = read.csv('Day3/Theory/storms.txt')
data
data = read.csv('Day3/Theory/storms.txt',sep='\t')
data
data
data1 = separate(data,'date',sep='-')
data1 = separate(data,'date',c('storm','wind','pressure')sep='-')
data1 = separate(data,'date',c('storm','wind','pressure'),sep='-')
data1
data1 = separate(data,date,c('storm','wind','pressure'),sep='-')
data1
data
colnames(data)
data[1]
data[,1]
data
data
d1 = separate(data,date,c('year','month','day'),sep='-')
d1
plot(d1$year,d1$storm)
plot(d1$year,d1$storm,'o',col='5')
d1 = d1[order(d1$year)]
plot(d1$year,d1$storm,'o',col='5')
d1
d1 = d1[order(-d1$year)]
d1 = d1[order(d1$year)]
d1
d1 = d1[order(-(d1$year)]
d1 = d1[order(-(d1$year))]
d1 = d1[order(-d1$year)]
d1 = d1[order(-d1$year)]
d1
d2 = unite(data,col=c('day','month','year'),sep='/')
d2 = unite(data,col=c('day','month','year'),sep=':')
d2 = unite(data,'day','month','year',sep=':')
d2 = unite(d1,col=c('day','month','year'),sep='/')
d2 = unite(d1,'day','month','year',sep='/')
d1
d2 = unite(d1,'day','month','year',sep='/')
d2
d2 = unite(d1,'Time','day','month','year',sep='/')
d2
d1
library('dplyr')
data = read.csv('Day3/Theory/stroms2.txt',sep='\t')
data = read.csv('Day3/Theory/storms2.txt',sep='\t')
data
data = read.csv('Day3/Theory/storms.txt',sep='\t')
data
length(data)
str(data)
head(data)
tail(data,5)
summary(data)
mean(data$wind)
median(data$wind)
mode(data$mode)
var(data$mode)
mode(data$wind)
var(data$wind)
sd(data$wind)
sqrt(data$wind)
sin(data$wind)
cos(data$wind)
data$wind * 2
data$wind / 2
dat
data
data
select(data,stroms,window())
select(data,stroms,wind)
select(data,storms,wind)
data
select(data,storm,wind)
select(data,date,storm)
select(data,date,wind)
data
select(data,-storm)
filter(data,wind >= 50)
filter(data,wind > 50)
filter(data,wind > 50,storm %in% )
data
filter(data,wind > 50,storm %in% c("Alberto","Ana","Arlene"))
filter(data,wind >= 50,storm %in% c("Alberto","Ana","Arlene"))
data
mutate(data,ratio=pressure/wind)
data1 = mutate(data,ratio=pressure/wind)
data1
select(data1,storm,ratio)
plot(data1$wind,data1$ratio)
plot(data1$wind,data1$ratio,'b')
plot(data1$wind,data1$ratio,'o',col='red')
data[order(data1$wind,data1$pressure)]
data1[order(data1$wind,data1$pressure)]
data1[order(data1$wind,data1$pressure),]
data1[2]
data1[order(data1$wind,data1$pressure),c(1,2,3,5)]
arrange(data1,wind)
arrange(data1,desc(wind))
pollution = read.table('Day3/Theory/pollution.txt')
pollution
str(pollution)
poll = read.csv('Day3/Theory/pollution.txt',sep='\t')
poll
poll
pollution
v1 = pollution[1,]
v1
type(v1)
str(v1)
v1
data
pollution
pollution = pollution[2:7,]
pollution
colnames(pollution) <- v1
colnames
pollution
v1
colnames(pollution) <- c('city','size','amount')
pollution
pollution = read.table('Day3/Theory/pollution.txt')
pollution
colnames(pollution) <- pollution[1,]
pollution
d = data[1,]
str(d)
d = pollution[1,]
str(d)
as.vector(d)
k = as.vector(d)
k
str(k)
as.list(k)
poll
poll %>% group_by(city)
d = poll %>% group_by(size)
d
d = poll %>% group_by(city)
d
d = poll %>% group_by(amount)
d
d = poll %>% group_by(size)
d
d
d %>% summarise(median=meadin(amount),mean=mean(var))
d %>% summarise(median=median(amount),mean=mean(var))
d %>% summarise(median=median(amount),mean=mean(amount),var=var(amount))
d = poll %>% group_by(city)
d %>% summarise(median=median(amount),mean=mean(amount),var=var(amount))
data = read.csv('Day3/theory/data_set1.txt')
data
data = read.csv('Day3/theory/data_set1.txt',sep=',')
data = read.csv('Day3/theory/data_set1.txt',sep='\t')
data
data = data %>% group_by(name)
data
summary(data)
data %>% summarise(mean=mean(marks),median=median(marks),sd=sd(marks))
data = data %>% group_by(fields)
data %>% summarise(mean=mean(marks),median=median(marks),sd=sd(marks))
data %>% summarise(mean=mean(marks),median=median(marks),sd=sd(marks))
data %>% summarise(mean=mean(marks),median=median(marks),sd=sd(marks),n=n())
data
poll
poll %>% group_by(city) %>% summarise(avg=mean(amount),n=n(),std_dav=sd(amount))
y = data.frame(x1=c('A','B','C'),x2=c(1,2,3))
z = data.frame(x1=c('B','C','D'),x2=c(2,3,4))
y
z
bind_cols(y,z)
bind_rows(y,z)
bind_rows(y,z)
bind(y,z)
intersect(y,z)
union(y,z)
setdiff(y,z)
setdiff(z,y)
setequal(y,z)
setequal(y,y)
inner_join(y,z,by=)
inner_join(y,z,by=x2)
inner_join(y,z,by='x2')
left_join(y,z,by='x2')
right_join(y,z,by='x2')
y[1]
y[2]
y[2,2]
y[2,2] = 5
y
left_join(y,z,by='x2')
data
View(v1)
View(v1)
View(v1)
poll
storms
data
data = read.csv('day3/theory/storms.txt',sep='\t')
data
data.tr <- transform(data,data=as.data.frame(date),ratio=(wind+pressure)/2,wind=as.double(wind))
data.tr
x = 1:20
x
x  = matrix(x,4,5)
x
apply(x,1,FUN=max)
apply(x,MARGIN = 1,FUN=max)
apply(x,MARGIN = 2,FUN=max)
apply(x,MARGIN = 2,FUN=mean)
apply(x,MARGIN = 1,FUN=mean)
install.packages('RMySQL')
library('RMySQL')
con <- dbConnect(MySQL(),user='root',password='',host='localhost',dbname='bank',port=3306)
summary(con)
dbGetInfo()
dbGetInfo(con)
dbListTables()
dbListTables(con)
dbListFields(user)
dbListFields('user')
dbListFields('bank','user')
dbListFields(con,'user')
dbDataType(RMySQL::MySQL(),'a')
dbDataType(RMySQL::MySQL(),1:5)
dbDataType(RMySQL::MySQL(),1.5)
tb = dbReadTable()
tb = dbReadTable(con,'user')
tb
colnames(data)
colnames(tb)
r = dbGetQuery(con,'select sum(balance) from user')
r
r = dbGetQuery(con,'select balance > 5000 from user')
r
r = dbGetQuery(con,'select balance from user where balance > 50000')
r
colnames(tb)
plot(tb$acc,tb$balance)
dbSendQuery('select name,balance from user')
dbSendQuery(con,'select name,balance from user')
r = dbFetch(con)
r = dbFetch()
r = dbFetch(con,'user')
q <- dbSendQuery(con,'select name,balance from user')
q <- dbSendQuery(con,'commit')
q <- getQuery(con,'commit')
q <- dbgetQuery(con,'commit')
dbGetQuery('commit')
dbGetQuery(con,'commit')
con <- dbConnect(MySQL(),user='root',password='',host='localhost',dbname='bank',port=3306)
dbGetQuery(con,'commit')
q <- dbSendQuery(con,'select name,balance from user')
dbGetInfo(q)
dbGetStatement(r)
dbGetStatement(q)
data = dbFetch(q)
data = dbFetch(q,5)
data
dbListFields(con,'user')
dbGetQuery(con,'select name,balance from user')
r = dbSendQuery(con,'select name,balance from user')
d = dbFetch(r,n=10)
d
dbGetRowCount(r)
dbGetRowsAffected(r)
dbColumnInfo(res)
dbColumnInfo(r)
dbClearResult(r)
dbGetQuery('select name,balance from user')
dbGetQuery(con,'select name,balance from user')
x = 1:10
y = letters[1:10]
x
y
trail <- data.frame(x,y,stringsAsFactors = FALSE)
trail
dbWriteTable(con,"trial",trial)
dbWriteTable(con,"trial",trail)
dbListTables(con)
dbWriteTable(con,"mtcars",mtcars)
x <- sample(100,10)
x
x <- sample(50,100,10)
x
x <- sample(50,10,.5,FASLE)
x <- sample(50,10,.5,FALSE)
x <- sample(50,10,FALSE,0.5)
x <- sample(50,10,replace=FALSE,0.5)
x <- sample(50,10,replace=FALSE,prob=0.5)
x <- sample(50,10,replace=FALSE)
x
y <- letters(11:20)
y <- letters(11:20)
y <- letters[11:20]
x
y
trail2 <- data.frame(x,y)
trail2 <- data.frame(x,y,stringsAsFactors = FALSE)
trial2
trial2
trail2
dbWriteTable(con,'trial',trail2,overwrite=TRUE)
dbGetQuery('select * from trial')
dbGetQuery(con,'select * from trial')
x = sample(100,10)
y = letters(15:24)
y = letters[15:24]
t = data.frame(x,y)
dbWriteTable(con,'trial',t,append=TRUE)
dbGetQuery(con,'select * from trial')
dbRemoveTable(con,'trail')
dbRemoveTable(con,'trial')
dbDisconnect(con)
history
history()
d = history()
d
history()
history()
history()
install.packages("RMySQL")
library("RMySQL")
con = dbConnect(host='localhost',port=3306,user='student',password='student',dbname='student')
con = dbConnect(MySQL(),host='localhost',port=3306,user='student',password='student',dbname='student')
summary(con)
dbGetInfo(con)
dbListTables(con)
dbListFields(con,'address')
dbDataType(con,'sachin')
dbDataType(con,1:10)
m = 1:100
m = matrix(m,20,5)
m
dbDataType(con,m)
d = data.frame(id=1:3,name=c('python','java','c'))
dbDataType(con,d)
dbDataType(con,123)
dbDataType(con,123.34)
dbDataType(con,1)
data = dbReadTable(con,'student')
str(data)
class(data)
dbGetQuery(con,'select * from fees where due>=2500;')
dbGetQuery(con,'select * from fees where due>=3500;')
dbGetQuery(con,'select student.name,student.sid,address.city from city join student on student.sid=address.sid;')
dbGetQuery(con,'select student.name,student.sid,address.city from address join student on student.sid=address.sid;')
d1 = dbGetQuery(con,'select student.name,student.sid,address.city from address join student on student.sid=address.sid;')
d1
query = dbSendQuery('select * from student;')
query = dbSendQuery(con,'select * from student;')
dbGetStatement(query)
dbGetRowCount(query)
dbColumnInfo(query)
data = dbFetch(query)
data
df = data.frame(id=1:3,name=c('python','java','c'),class=c('great','lower','average'))
df
dbWriteTable(con,'my_new_data',df)
dbWriteTable(con,'mtcars',mtcars)
df
r = data.frame(id=4:5,name=c('php','.net'),class=c('third','fourth'))
df1 = rbind(df,r)
df1
dbWriteTable(con,'my_new_data',df1,overwrite=True)
dbWriteTable(con,'my_new_data',df1,overwrite=TRUE)
d = data.frame(id=6:7,name=c('scala','ruby'),class=c('top','achii'))
dbWriteTable(con,'my_new_data',d,append=TRUE)
