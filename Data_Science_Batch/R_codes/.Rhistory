b
data
e
mydata
s
x
x
#avg = summation of numbers / total numbers
#median --> mid value
#variance = summation of (x-x_bar)2 / number of items
m = sum(x)/length(x)
m
mean(x)
s_data = sort(x)
length(x)
7/2
d_data[4]
s_data[4]
median(x)
x_bar = mean(x)
x_bar
x
x_xbar = x-x_bar
x_xbar
x_xbar_squre = x_xbar_squre*x_xbar_squre
x_xbar_squre
x_xbar_squre = x_xbar*x_xbar
x_xbar_squre
data = sum(x_xbar_squre)
data
data / length(x)
data /length(x) -1
data / (length(x) -1)
data / length(x)
sd(x)
mean(x)
d = x-5.4
d
d = d*d
d
d  = sum(d)
v = d/length(x)
v1 = d/length(y)
v1 = d/(length(x)-1)
v1
v
var(x)
var(x) - v1
data = c(1:100)
data
data[1]
data[1,5,7,9,13,46,3,2]
data[c(1,5,7,9,13,46,3,2)]
data[1:10]
data[-10]
data[-10:1]
data[-10:-1]
data[-10:-90]
data[10:1]
data[-3]
data[-1:-3]
data[-1:-10]
data[-1:-90]
data[-50:-60]
data[-1:-60]
data[-1:-(length(data)-25)]
head(data)
tail(data)
head(data,29)
tail(data,10)
tail(data,25)
data[-1:-100-25]
data[-1:(-100-25)]
data[-1:(-100+25)]
a = 201:300
a[1]
a[100]
a[1:10]
a[1:5,55:60]
a[1:6,55:60]
a = c(201:300)
a[1:6,55:60]
a[c(1:6,55:60)]
a[c(1,35,56,4,45,32,)]
a[c(1,35,56,4,45,32)]
1:6
55:60
c(1:6,55:60)
x = c(1:100)
length(x)
x = c(1:10)
length(x)
y = c(1,5,2,4,3,2,5,2,4,6)
length(y)
plot(x,y)
plot(y,x)
hist(x)
hist(y
)
y = runif(100,1,100)
y
length(x)
length(y)
x  = c(1:100)
y = runif(100,1,50)
length(x) == length(y)
plot(x,y)
help(plot)
plot(x,sort(y))
x = c(1:100)
x
#y = mx + c
#y = mx + c
#y = ax2+bx+c
#y = ax3+bx2+cx+d
y = rnorm(100,5.5,1.2)
plot(x,y)
plot(1:1000,rnorm(1000,575,100))
plot(rnorm(1000,575,100),1:1000)
data = sample(100,300,500,replace=TRUE)
data = sample(c(100,300),500,replace=TRUE)
data
data = sample(c(100:300),500,replace=TRUE)
data
hist(data)
data = sample(c(100:1000),500,replace=TRUE)
hist(data)
data = sample(c(100:1000),500,replace=FALSE)
hist(data)
data
sort(data)
hist(data,50)
hist(data,200)
hist(data,500)
data = sample(c(1:500),100)
data
data = sort(data)
data
hist(data)
hist(data,100)
hist(data,1)
hist(data,5)
plot
c
x
y
x
plot(x,y,"p")
plot(x,y,"l")
plot(x,sort(y),"l")
plot(x,sort(y),"p")
plot(x,y,"b")
plot(x,y,"c")
plot(x,y,"0")
plot(x,y,"o")
plot(x,y,"h")
plot(x,y,"s")
plot(x,y,"S")
plot(x,y,"n")
plot(x,y,"n",'red')
plot(x,y,"o",'red')
plot(x,y,"o",color='red')
plot(x,y,"o",col='red')
plot(x,y,"o",col='red',xlab='data')
plot(x,y,"o",col='red',xlab='data',ylab='repetation')
plot(x,y)
plot(x,y,'l')
plot(x,y,'s')
plot(x,y,'o')
plot(x,y,'b')
plot(x,y,'o')
plot(x,y,'c')
plot(x,y,'h',col='red')
y = rnorm(1000,50,5.7)
plot(1:1000,y,'h',col='blue')
plot(1:1000,y,'o',col='blue')
plot(1:100,y,'h',col='blue')
y = rnorm(100,50,5.7)
plot(1:100,y,'h',col='blue')
plot(1:100,y,'o',col='blue')
plot(1:100,y,'o',col='blue')
plot(1:100,y,'o',col='blue',xlab='population',ylab='height')
data()
mtcars
summary(mtcars)
summary(mtcars)
plot(mtcars$cyl,mtcars$mpg)
plot(mtcars$cyl,mtcars$mpg)
plot(mtcars$cyl,mtcars$disp,xlab=cyl,ylab=disp,type='o',col='dark red')
plot(mtcars$cyl,mtcars$disp,xlab='cyl',ylab='disp',type='o',col='dark red')
plot(mtcars$cyl,mtcars$disp,xlab='cyl',ylab='disp',type='p',col='dark red')
data()
sleep
hist(sleep$extra)
#y = mx+c
x = a:100
x = 1:100
y = .321*x+3
y
x
plot(x,y,type='o',col='yellow')
plot(x,y,type='o',col='dark red')
plot(x,0.65*x,type='o',col='dark red')
plot(x,0.65*x+4,type='o',col='dark red')
plot(x,0.1*x+4,type='o',col='dark red')
#y= ax2 + bx + c
x = c(1:100)
y = ( 12*(x*x) ) + (10*x) + (5)
plot(x,y)
x = c(1:10000)
y = ( 12*(x*x) ) + (10*x) + (5)
plot(x,y)
#y = ax3+bx2+cx+d
x = 1:100
x = seq(1,1000,2)
length(x)
y = (10*(x*x*x)) + (15*(x*x)) + (5*x) + 10
plot(x,y,'o',col='red')
x = seq(1,10000,2)
y = (10*(x*x*x)) + (15*(x*x)) + (5*x) + 10
x = seq(1,10000,2)
plot(x,y,'o',col='red')
c = 1
while ( c<= 10 ) {
cat("Hello World Times ",c)
c = c + 1
}
while ( c<= 10 ) {
cat("Hello World Times ",c,'\n')
c = c + 1
}
c = 1
while ( c<= 10 ) {
cat("Hello World Times ",c,'\n')
c = c + 1
}
num = 5
c = 1
while (c <= 10 ){
cat(num,"*",c,"=",num*c,"\n")
c = c  + 1
}
num ={1,2,3,4,5,6,7,8,9}
num =s{1,2,3,4,5,6,7,8,9}
s = 1:10
s
s  = seq(1,10)
s
s = c(1:10)
s
for v in s:
num = 123
s = 2
e = sqrt(123)
e
e = as.integer(e)
e
s
while (s<=e) {
if (num%s==0 ){
while (s<=e) {
if (num%%s==0 ){
f =  FALSE
}
while (s<=e) {
if (num%%s==0 ){
f =  FALSE
break
}
f = TRUE
}
if (f) {
cat("Prime")
} else { }
for ( var in seq(1,10) ) {
cat("Hello World",var,"Times")
}
}
for ( var in seq(1,10) ) {
cat("Hello World",var,"Times")
}
odd = seq(1,100,2)
odd
for ( data in odd) print(data)
for ( var in 1:10 ){
print("Hello World") }
for ( var in 1:10 ){
if ( var == 5 ){
break }
print(var)
}
for ( var in 1:10 ) {
if ( var%%2 == 0 ) next
print(var)
}
prime = function(num){
s = 2:round(sqrt(num))
for ( check in s ) {
if (num%%var==0) return(FALSE)
}
return(TRUE)
}
prime(121)
prime(123)
prime(16)
prime = function(num){
s = 2:round(sqrt(num))
for ( check in s ) {
if (num%%check==0) return(FALSE)
}
return(TRUE)
}
prime(121)
prime(123)
prime(16)
prime(17)
c = 1
while (c<=10) {
cat("Hello World Times ",c)
c = c + 1
}
for ( var in 1:10 ){
if (var%%2==0) next
print(var)
if (var==7) break
}
x =
5
x = 5
y = 7
z = 6
if ( x>=y & x>=z) print(x)
if ( x>=y & x>=z) print(x) else
}
if ( x>=y & x>=z) print(x) else if ( y>=x & y>=z) print(y) else print(z)
x = 5
y = 7
z = 6
if ( x>=y & x>=z ) {
print(x)
} else if ( y>=y & y>=z) {
print(y)
} else  {
print(z)
}
cube = function(num) num^3
data = 1:10
cube(data)
assign("data",seq(0:100:5))
assign("data",seq(0,100,5))
data
data = seq(13,130,13)
data
sum(data)
data = c(data,NULL,12,3,4,3,232,NULL)
data
data = c(data,NA,12,3,4,3,232,NA)
data
sum(data)
sum(data,na.rm = TRUE)
data = data.frame(name=c('sachin','jay','palak','divya','apoorva'),marks=c(78,89,76,87,78),sex=c('boy','boy','girl','girl','girl'))
data
str(data)
dimnames(data)
names(data)
colnames(data)
rownames(data)
names(data) <- c('property1','property2','property3')
data
colnames(data) <- c(100:96)
rownames(data) <- c(100:96)
data
x = seq(1,100,3)
x
sum(x)
max(x)
min(x)
sd(x)
mean(x)
x = rnorm(1000,25,12.5)
x
x = rnorm(100,25,12.5)
x
x = NA
x[1] = 5
x[2]  = 6
x[3] = 10
x
x = NA
data = rnorm(100,35,7.8)
data
for ( var in 1:100 ){
x[var] = as.interger(data[var])
}
for ( var in 1:100 ){
x[var] = as.integer(data[var])
}
x
data
x
max(x)
min(x)
y = sort(x)
y
z = sqrt(y)
for ( var in 1:100){
cat("value = ",y[var],"squre root = ",z[var],"\n")
}
log(y)
summary(x)
sd(x)
35-8.29
35+8.29
hist(x)
x = rbinom(100,6,0.16)
x
hist(x)
x = rbinom(100,6,0.16)
x
x = rbinom(100,6,0.3)
x
x = rbinom(100,6,0.1)
x
x = rbinom(100,6,0.5)
x
x = rbinom(100,6,0.5)
hist(x)
x = rbinom(100,6,1)
hist(x)
x = rbinom(100,6,0.8)
hist(x)
x = rbinom(100,6,0.45)
hist(x)
quantile(x)
boxplot(x)
hist(x)
x = rnorm(100,35,5)
x
boxplot(x)
mean(x)
quantile(x)
fivenum(x)
plot(x)
hist(x)
x = seq(1:10)
cumsum(x)
x
cumsum(x)
cummax(x)
cummin(x)
cumprod(x)
x = c(1,3,34,2,34,21,3,54,2,35,32,12,42,23,24,3,44,2)
cumsum(x)
cummax(x)
x
cummax(x)
cummin(x)
cumprod(x)
x = seq(1,5)
x
cumprod(x)
x
table(x)
x = rnorm(100,56,12)
x
y
y
myt = table(y)
myt
length(y)
length(myt)
mean(myt)
mean(y)
quantile(y)
myt
new_table = table(myt)
new_table
data = data.frame(rich=c(12,15,17,1115,8,9,7,9),graze=c(mow,mow,mow,mow,mow,unnow,unnow,unnow,unnow))
data = data.frame(rich=c(12,15,17,1115,8,9,7,9),graze=c('mow','mow','mow','mow','mow','unnow','unnow','unnow','unnow'))
data = data.frame(rich=c(12,15,17,11,15,8,9,7,9),graze=c('mow','mow','mow','mow','mow','unnow','unnow','unnow','unnow'))
data
data
dt = table(data)
dt
fw = data.frame(x=c('Taw','Torridge','ouse','exe','lyn','brook','ditch','fal'),count=c(9,25,15,2,14,25,24,47),speed=c(2,3,5,9,14,24,29,34))
fw
tb = table(fw$count,fw$speed)
tb
ratings = c(1,3,2,3,2,3,NA,3,2,4,2,3,NA,3,4,2,3,0,3,4,2,3,4,NA,5)
ratings
mean(ratings)
mean(ratings,na.rm=TRUE)
round(mean(ratings,na.rm = TRUE))
d = is.na(ratings)
d
d
rating
data
d
ratings
for ( var in 1:length(ratings)){
if (d[var]){ }
}
newdata = NA
for ( var in 1:length(ratings)){
if ( d[var] ) newdata[var]=ratings[var]
else newdata[var]=3
}
data
ratings
newdata
install.packages(sqldf)
